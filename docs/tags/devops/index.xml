<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Devops on 二次元の技术宅</title><link>/tags/devops/</link><description>Recent content in Devops on 二次元の技术宅</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 14 May 2021 15:02:33 +0800</lastBuildDate><atom:link href="/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>以非root用户运行docker服务</title><link>/post/2021/05/docker-non-root/</link><pubDate>Fri, 14 May 2021 15:02:33 +0800</pubDate><guid>/post/2021/05/docker-non-root/</guid><description>某些场景下可能需要使用以非root用户来运行docker服务，以保证系统的安全性。 参考文章 Run the Docker daemon as a non-root user (Rootless mode)</description></item><item><title>因MTU导致的容器网络问题</title><link>/post/2020/03/host-container-mtu/</link><pubDate>Sun, 15 Mar 2020 23:17:50 +0800</pubDate><guid>/post/2020/03/host-container-mtu/</guid><description>&lt;p>将CI/CD服务前移到&lt;a href="https://kubernetes.io/" target="_blank">k8s&lt;/a>后，当&lt;a href="https://drone.io/" target="_blank">drone&lt;/a>的插件&lt;a href="https://github.com/drone-plugins/drone-docker" target="_blank">drone-docker&lt;/a>构建镜像时，总卡在更新软件包的步骤。是网络连接的问题，为了解决这个问题，耗费了我整个周末。&lt;/p>
&lt;pre>&lt;code class="language-bash"># apk update
fetch http://dl-cdn.alpinelinux.org/alpine/v3.11/main/x86_64/APKINDEX.tar.gz
&lt;/code>&lt;/pre></description></item><item><title>K8S Dashboard的Ingress配置</title><link>/post/2020/03/kubernetes-dashboard-ingress/</link><pubDate>Sat, 14 Mar 2020 11:21:40 +0800</pubDate><guid>/post/2020/03/kubernetes-dashboard-ingress/</guid><description>&lt;p>&lt;a href="https://github.com/kubernetes/dashboard" target="_blank">Kubernetes Dashboard&lt;/a>的后端必须通过https访问，是自签名的ssl证书。使用Ingress连接时，会出现证书验证的问题，因此要配置Ingress忽略ssl验证。&lt;/p></description></item><item><title>K8S入坑指南</title><link>/post/2020/02/k8s/</link><pubDate>Wed, 19 Feb 2020 21:12:58 +0800</pubDate><guid>/post/2020/02/k8s/</guid><description>&lt;p>Docker是容器，但容器不是Docker。Docker是containerd的上层应用，Docker的流行带动了容器技术的应用。单机服务编排，docker + docker-compose的组合足以支撑。对于集群管理，还是K8S更合适。K8S可基于docker引擎，也可直接基于containerd的容器引擎。K3S是K8S的精简版，基于containerd。&lt;/p></description></item><item><title>Jenkins相关</title><link>/post/2020/02/jenkins/</link><pubDate>Sat, 15 Feb 2020 18:06:22 +0800</pubDate><guid>/post/2020/02/jenkins/</guid><description>Jenkins相关，留存 参考文章 Jenkins Theme - jenkins-material-theme Template for Jenkins Jobs for PHP Projects</description></item><item><title>使用php部署工具deployer实现自动部署</title><link>/post/2017/05/php-deployer/</link><pubDate>Thu, 04 May 2017 10:00:44 +0800</pubDate><guid>/post/2017/05/php-deployer/</guid><description>&lt;p>利用git webhook请求php脚本，触发deployer自动部署实现的核心流程：&lt;code>PC/Client(git push) =&amp;gt; GitHub/Git Repository(webhook/http request) =&amp;gt; Server/WebHost(php hook/shell_exec) =&amp;gt; Server/WeHost(deploy commands)&lt;/code>&lt;/p></description></item></channel></rss>