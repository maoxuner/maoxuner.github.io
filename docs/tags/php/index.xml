<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Php on 二次元の技术宅</title><link>/tags/php/</link><description>Recent content in Php on 二次元の技术宅</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 08 Aug 2023 10:54:34 +0800</lastBuildDate><atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>理解Yii2核心架构</title><link>/post/2023/08/yii2-core-structure/</link><pubDate>Tue, 08 Aug 2023 10:54:34 +0800</pubDate><guid>/post/2023/08/yii2-core-structure/</guid><description>&lt;p>Yii2是一个设计简单，灵活性高，容易上手的MVC框架。它的生态所有欠缺，所以很需要理解框架，然后DIY。很希望Yii3能早日发布。&lt;/p>
&lt;p>使用Yii2也有了几年，在理解&lt;code>控制反转/IoC&lt;/code>的概念之后，再结合框架&lt;code>yii\base\BaseObject&lt;/code>和&lt;code>yii\base\Component&lt;/code>的源码解读，对框架又有了更深清晰的认识。&lt;/p></description></item><item><title>Yii2GridView高级用法</title><link>/post/2020/02/yii2-grid-view/</link><pubDate>Sat, 15 Feb 2020 23:40:15 +0800</pubDate><guid>/post/2020/02/yii2-grid-view/</guid><description>&lt;p>机缘巧合，再次接触到Yii2框架的项目，做了简单的增删查改。涉及到列表项下拉筛选框，自定义表格显示内容。&lt;/p></description></item><item><title>Yii2使用DataFilter查询数据</title><link>/post/2020/02/yii2-datafilter/</link><pubDate>Sat, 15 Feb 2020 13:26:33 +0800</pubDate><guid>/post/2020/02/yii2-datafilter/</guid><description>&lt;p>Yii2使用DataFilter查询数据 挖坑待填&lt;/p></description></item><item><title>解决Composer使用Bower管理前端资源下载速度慢的问题</title><link>/post/2018/06/composer-with-bower-asset/</link><pubDate>Thu, 14 Jun 2018 00:13:05 +0800</pubDate><guid>/post/2018/06/composer-with-bower-asset/</guid><description>&lt;p>作为一个程序猿，有一半的时间在跟网络、防火墙做斗争，感觉真是可悲。&lt;/p>
&lt;p>composer的加速有两个方面：&lt;/p>
&lt;ul>
&lt;li>获取php资源包数据（packagist）&lt;/li>
&lt;li>获取bower前端资源数据（github）&lt;/li>
&lt;/ul></description></item><item><title>Yii2开启gii以及debug</title><link>/post/2018/03/yii2-gii-debug/</link><pubDate>Wed, 07 Mar 2018 13:40:38 +0800</pubDate><guid>/post/2018/03/yii2-gii-debug/</guid><description>&lt;p>使用docker搭建php开发环境时遇到一个坑，明明&lt;code>gii&lt;/code>以及&lt;code>debug&lt;/code>模块配置正确，但是却不运行的问题。查看&lt;a href="http://www.yiichina.com/doc/guide/2.0/start-gii" target="_blank">Yii2文档 - 使用 Gii 生成代码&lt;/a>，找到了思路。&lt;/p></description></item><item><title>PHP7.2中Yii2核心类Object报错</title><link>/post/2018/02/php7.2-yii2-object-conflict/</link><pubDate>Sun, 04 Feb 2018 13:55:09 +0800</pubDate><guid>/post/2018/02/php7.2-yii2-object-conflict/</guid><description>&lt;p>用docker搭建php服务器时，发现yii2核心类&lt;code>Object&lt;/code>报错了。此时用的php版本是当前最新版的&lt;code>7.2&lt;/code>。&lt;/p>
&lt;pre>&lt;code>Fatal error: Cannot use 'Object' as class name as it is reserved in /var/www/yii/vendor/yiisoft/yii2/base/Object.php on line 77
&lt;/code>&lt;/pre></description></item><item><title>使用docker搭建php开发环境</title><link>/post/2018/01/docker-php-server/</link><pubDate>Sun, 28 Jan 2018 15:42:58 +0800</pubDate><guid>/post/2018/01/docker-php-server/</guid><description>&lt;p>**本文年代久远，可能已经不适用。仅供参考！**新的php镜像参考&lt;a href="https://hub.docker.com/r/maoxuner/php" target="_blank">maoxuner/php
&lt;/a>。&lt;/p>
&lt;p>&lt;del>多容器 apache+php+mariadb+redis&lt;/del>&lt;/p></description></item><item><title>使用php部署工具deployer实现自动部署</title><link>/post/2017/05/php-deployer/</link><pubDate>Thu, 04 May 2017 10:00:44 +0800</pubDate><guid>/post/2017/05/php-deployer/</guid><description>&lt;p>利用git webhook请求php脚本，触发deployer自动部署实现的核心流程：&lt;code>PC/Client(git push) =&amp;gt; GitHub/Git Repository(webhook/http request) =&amp;gt; Server/WebHost(php hook/shell_exec) =&amp;gt; Server/WeHost(deploy commands)&lt;/code>&lt;/p></description></item><item><title>折腾laravel总结</title><link>/post/2017/04/laravel-learning/</link><pubDate>Thu, 27 Apr 2017 14:17:52 +0800</pubDate><guid>/post/2017/04/laravel-learning/</guid><description>&lt;p>学习laravel遇到的一些坑，备忘。&lt;/p></description></item><item><title>LNMPA专题</title><link>/post/2017/04/lnmpa/</link><pubDate>Thu, 06 Apr 2017 21:45:55 +0800</pubDate><guid>/post/2017/04/lnmpa/</guid><description>&lt;p>主要针对 Apache2+PHP7.0+MariaDB&lt;/p></description></item><item><title>php抽象类和接口</title><link>/post/2017/03/php-abstract-interface/</link><pubDate>Fri, 31 Mar 2017 20:29:44 +0800</pubDate><guid>/post/2017/03/php-abstract-interface/</guid><description>&lt;p>在写一个通用的通知类时，遇到了问题，特此查看一下抽象类跟接口的异同点。&lt;/p></description></item><item><title>yii2使用邮件组件</title><link>/post/2017/03/yii2-mail/</link><pubDate>Fri, 31 Mar 2017 20:24:32 +0800</pubDate><guid>/post/2017/03/yii2-mail/</guid><description>&lt;p>Yii2使用SwiftMailer（作为组件）&lt;/p></description></item><item><title>CodeIgniter3利用composer实现命名空间类的自动加载</title><link>/post/2017/03/ci3-composer/</link><pubDate>Fri, 24 Mar 2017 13:36:35 +0800</pubDate><guid>/post/2017/03/ci3-composer/</guid><description>&lt;p>CodeIgniter3中是没有使用命名空间的，但是不代表它就不能使用命名空间。根本上讲，命名空间是php的一项功能，从php5.3.0开始就支持了这一功能。CodeIgniter只是没有实现根据命名空间来实现类库的自动加载，但是可以通过第三方类库如&lt;code>composer&lt;/code>来实现其他类库的自动加载。&lt;/p></description></item><item><title>Typecho使用KindEditor插件上传 找不到上传路径UPLOAD_DIR错误 解决办法</title><link>/post/2015/02/typecho-kindeditor-upload-dir/</link><pubDate>Tue, 03 Feb 2015 17:43:20 +0800</pubDate><guid>/post/2015/02/typecho-kindeditor-upload-dir/</guid><description>&lt;p>Typecho自带的文字编辑器太简陋了，于是换用了之前一直很喜欢的KindEditor。
然而，使用KindEditor上传图片或者文件时却出现了找不到上传路径的错误提示&lt;/p>
&lt;pre>&lt;code>Fatal error: Undefined class constant 'UPLOAD_DIR' in /var/www/defualt/usr/plugins/KindEditor/Upload.php on line 75
&lt;/code>&lt;/pre></description></item></channel></rss>